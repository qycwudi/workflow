// Code generated by goctl. DO NOT EDIT.
package types

type SetKvRequest struct {
	SpiderName string `json:"spiderName"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type SetKvResponse struct {
	Code    int    `json:"code" common:"0-成功|100-key存在|500-系统错误"`
	Message string `json:"message"`
}

type GetVByKRequest struct {
	Key string `json:"key"`
}

type GetVByKResponse struct {
	Code    int    `json:"code" common:"0-成功|101-key不存在|500-系统错误"`
	Message string `json:"message"`
	Value   string `json:"value"`
}

type WorkSpaceBase struct {
	WorkSpaceId   string   `json:"workSpaceId,optional"`
	WorkSpaceName string   `json:"workSpaceName"`
	WorkSpaceDesc string   `json:"workSpaceDesc,optional"`
	WorkSpaceType string   `json:"workSpaceType"`
	WorkSpaceTag  []string `json:"workSpaceTag,optional"`
	WorkSpaceIcon string   `json:"workSpaceIcon,optional"`
}

type WorkSpaceNewRequest struct {
	WorkSpaceBase
}

type WorkSpaceNewResponse struct {
	WorkSpaceBase
	WorkSpaceConfig string `json:"workSpaceConfig"`
}

type WorkSpaceEditRequest struct {
	WorkSpaceBase
	WorkSpaceConfig string `json:"workSpaceConfig,optional"`
}

type WorkSpaceEditResponse struct {
	WorkSpaceBase
	WorkSpaceConfig string `json:"workSpaceConfig"`
}

type WorkRemoveRequest struct {
	WorkSpaceId string `json:"workSpaceId,optional"`
}

type WorkSpaceRemoveResponse struct {
}

type WorkSpaceListRequest struct {
	WorkSpaceName string  `json:"workSpaceName,optional"`
	WorkSpaceType string  `json:"workSpaceType,optional"`
	WorkSpaceTag  []int64 `json:"workSpaceTag,optional"`
	Current       int     `json:"current"`
	PageSize      int     `json:"pageSize"`
}

type WorkSpaceListResponse struct {
	Current  int             `json:"current"`
	PageSize int             `json:"pageSize"`
	Total    int64           `json:"total"`
	Data     []WorkSpacePage `json:"data"`
}

type WorkSpacePage struct {
	WorkSpaceBase
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type WorkSpaceDetailRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
}

type WorkSpaceDetailResponse struct {
	WorkSpaceBase
	WorkSpaceConfig string `json:"workSpaceConfig"`
}

type WorkSpaceEditTagRequest struct {
	WorkSpaceId  string   `json:"workSpaceId"`
	WorkSpaceTag []string `json:"workSpaceTag"`
}

type WorkSpaceEditTagResponse struct {
}

type WorkSpaceUploadCanvasConfigTagRequest struct {
	WorkSpaceId  string `json:"workSpaceId"`
	CanvasConfig string `json:"canvasConfig"`
}

type WorkSpaceUploadCanvasConfigTagResponse struct {
}

type TagListRequest struct {
}

type TagListResponse struct {
	Tag []TagEntity `json:"tagList"`
}

type TagEntity struct {
	Id   int    `json:"id"`
	Name string `json:"name"`
}

type CanvasRunRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
}

type CanvasRunResponse struct {
	WorkSpaceId string `json:"workSpaceId"`
	Response    string `json:"response"`
}

type ModuleListRequest struct {
}

type ModuleListResponse struct {
	Total   int          `json:"total"`
	Modules []ModuleData `json:"modules"`
}

type ModuleData struct {
	Index        int    `json:"index"`
	ModuleId     string `json:"moduleId"`
	ModuleName   string `json:"moduleName"`
	ModuleType   string `json:"moduleType"`
	ModuleConfig string `json:"moduleConfig"`
}

type EdgeCustomData struct {
	SourcePoint int `json:"sourcePoint"`
	TargetPoint int `json:"targetPoint"`
}

type CanvasDetailRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
}

type CanvasDetailResponse struct {
	Node []CanvasNode `json:"node"`
	Edge []CanvasEdge `json:"edge"`
}

type CanvasNode struct {
	NodeId       string                 `json:"nodeId"`
	Position     NodePosition           `json:"position"`
	ModuleConfig map[string]interface{} `json:"moduleConfig"`
}

type CanvasEdge struct {
	EdgeId      string `json:"edgeId"`
	Source      string `json:"source"`
	SourcePoint int    `json:"sourcePoint"`
	Target      string `json:"target"`
	TargetPoint int    `json:"targetPoint"`
	Route       string `json:"route"`
}

type CanvasAddNodeRequest struct {
	WorkSpaceId string       `json:"workSpaceId"`
	ModuleId    string       `json:"moduleId"`
	Position    NodePosition `json:"position"`
}

type NodePosition struct {
	X float64 `json:"x"`
	Y float64 `json:"y"`
}

type CanvasAddNodeResponse struct {
	NodeId string `json:"nodeId"`
}

type CanvasAddEdgeRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
	Source      string `json:"source"`
	SourcePoint int    `json:"sourcePoint"`
	Target      string `json:"target"`
	TargetPoint int    `json:"targetPoint"`
	Route       string `json:"route"`
}

type CanvasAddEdgeResponse struct {
	EdgeId string `json:"edgeId"`
}

type CanvasDeleteNodeRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
	NodeId      string `json:"nodeId"`
}

type CanvasDeleteNodeResponse struct {
	WorkSpaceId string `json:"workSpaceId"`
	NodeId      string `json:"nodeId"`
}

type CanvasDeleteEdgeRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
	EdgeId      string `json:"edgeId"`
}

type CanvasDeleteEdgeResponse struct {
	EdgeId string `json:"edgeId"`
}

type CanvasEditNodeRequest struct {
	WorkSpaceId  string                 `json:"workSpaceId"`
	NodeId       string                 `json:"nodeId"`
	Position     NodePosition           `json:"position"`
	ModuleConfig map[string]interface{} `json:"moduleConfig"`
}

type CanvasEditNodeResponse struct {
	NodeId string `json:"nodeId"`
}

type CanvasEditEdgeRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
	EdgeId      string `json:"edgeId"`
	Source      string `json:"source"`
	SourcePoint int    `json:"sourcePoint"`
	Target      string `json:"target"`
	TargetPoint int    `json:"targetPoint"`
	Route       string `json:"route"`
}

type CanvasEditEdgeResponse struct {
	EdgeId string `json:"edgeId"`
}

type CanvasGetNodeRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
	NodeId      string `json:"nodeId"`
}

type CanvasGetNodeResponse struct {
	NodeId string `json:"nodeId"`
}

type CanvasGetEdgeRequest struct {
	WorkSpaceId string `json:"workSpaceId"`
	EdgeId      string `json:"edgeId"`
}

type CanvasGetEdgeResponse struct {
	EdgeId string `json:"edgeId"`
}
