// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type ApiOnOffRequest struct {
	ApiId  string `json:"apiId"`
	Status string `json:"status" desc:"上下线状态ON OFF"`
}

type ApiOnOffResponse struct {
	ApiId  string `json:"apiId"`
	Status string `json:"status" desc:"上下线状态ON OFF"`
}

type ApiPublishList struct {
	WorkSpaceId string `json:"workSpaceId"`
	ApiId       string `json:"apiId"`
	ApiName     string `json:"apiName"`
	ApiDesc     string `json:"apiDesc"`
	PublishTime string `json:"publishTime"`
	Status      string `json:"status" desc:"上下线状态ON OFF"`
}

type ApiPublishListRequest struct {
	Current  int    `json:"current"`
	PageSize int    `json:"pageSize"`
	Id       string `json:"id,optional" desc:"空间ID 非必填"`
	Name     string `json:"name,optional"`
}

type ApiPublishListResponse struct {
	Current  int              `json:"current"`
	PageSize int              `json:"pageSize"`
	Total    int64            `json:"total"`
	List     []ApiPublishList `json:"list"`
}

type ApiPublishRequest struct {
	Id      string `json:"id" desc:"空间ID"`
	ApiName string `json:"apiName" desc:"名称"`
	ApiDesc string `json:"apiDesc" desc:"描述"`
}

type ApiPublishResponse struct {
	ApiId string `json:"apiId"`
}

type ApiRecords struct {
	ApiId    string `json:"apiId"`
	ApiName  string `json:"apiName" desc:"名称"`
	CallTime string `json:"callTime"`
	Status   string `json:"status"`
	TraceId  string `json:"traceId"`
	Param    string `json:"param"`
	Extend   string `json:"extend"`
}

type ApiRecordsRequest struct {
	Current  int    `json:"current"`
	PageSize int    `json:"pageSize"`
	ApiId    string `json:"apiId,optional" desc:"apiId"`
	ApiName  string `json:"apiName,optional" desc:"api名称"`
}

type ApiRecordsResponse struct {
	Current  int          `json:"current"`
	PageSize int          `json:"pageSize"`
	Total    int64        `json:"total"`
	List     []ApiRecords `json:"list"`
}

type ApiSecretKey struct {
	ApiId          string `json:"apiId"`
	Name           string `json:"name"`
	SecretKey      string `json:"secretKey"`
	ExpirationTime string `json:"expirationTime"`
	Status         string `json:"status" desc:"状态 ON OFF"`
}

type ApiSecretKeyCreateRequest struct {
	ApiId          string `json:"apiId"`
	Name           string `json:"name"`
	ExpirationTime int64  `json:"expirationTime"`
}

type ApiSecretKeyCreateResponse struct {
	ApiId          string `json:"apiId"`
	Name           string `json:"name"`
	SecretKey      string `json:"secretKey"`
	ExpirationTime string `json:"expirationTime"`
}

type ApiSecretKeyDeleteRequest struct {
	SecretKey string `json:"secretKey"`
}

type ApiSecretKeyDeleteResponse struct {
	SecretKey string `json:"secretKey"`
}

type ApiSecretKeyListRequest struct {
	ApiId    string `json:"apiId"`
	Current  int    `json:"current"`
	PageSize int    `json:"pageSize"`
}

type ApiSecretKeyListResponse struct {
	Current  int            `json:"current"`
	PageSize int            `json:"pageSize"`
	Total    int64          `json:"total"`
	List     []ApiSecretKey `json:"list"`
}

type ApiSecretKeyUpdateExpirationTimeRequest struct {
	SecretKey      string `json:"secretKey"`
	ExpirationTime int64  `json:"expirationTime"`
}

type ApiSecretKeyUpdateExpirationTimeResponse struct {
	SecretKey      string `json:"secretKey"`
	ExpirationTime string `json:"expirationTime"`
}

type ApiSecretKeyUpdateStatusRequest struct {
	SecretKey string `json:"secretKey"`
	Status    string `json:"status" desc:"状态 ON OFF"`
}

type ApiSecretKeyUpdateStatusResponse struct {
	SecretKey string `json:"secretKey"`
	Status    string `json:"status" desc:"状态 ON OFF"`
}

type CanvasDetailRequest struct {
	Id string `json:"id"`
}

type CanvasDetailResponse struct {
	Id    string                 `json:"id"`
	Name  string                 `json:"name"`
	Graph map[string]interface{} `json:"graph"`
}

type CanvasDraftRequest struct {
	Id           string                   `json:"id"`
	Graph        map[string]interface{}   `json:"graph"`
	GlobalParams []map[string]interface{} `json:"globalParams"`
}

type CanvasDraftResponse struct {
	Hash       string `json:"hash"`
	UpdateTime int64  `json:"updateTime"`
}

type CanvasRunRequest struct {
	Id string `json:"id" desc:"空间ID"`
}

type CanvasRunResponse struct {
	Ts       int64             `json:"ts"`
	Id       string            `json:"id"`
	MetaData map[string]string `json:"metadata"`
	Data     interface{}       `json:"data"`
}

type CanvasRunSingleDetailRequest struct {
	Id     string `json:"id"`     // 空间ID
	NodeId string `json:"nodeId"` // 节点ID
}

type CanvasRunSingleDetailResponse struct {
	NodeId    string `json:"nodeId"`
	NodeName  string `json:"nodeName"`
	StartTime int64  `json:"startTime"`
	Duration  int64  `json:"duration"`
	Status    string `json:"status"`
	Error     string `json:"error"`
	Input     string `json:"input"`
	Output    string `json:"output"`
}

type CanvasRunSingleRequest struct {
	Id     string `json:"id" desc:"空间ID"`
	NodeId string `json:"nodeId" desc:"节点ID"`
}

type CanvasRunSingleResponse struct {
	Ts       int64             `json:"ts"`
	Id       string            `json:"id"`
	MetaData map[string]string `json:"metadata"`
	Data     interface{}       `json:"data"`
}

type ComponentDetail struct {
	Id        string                 `json:"id"`        // 组件ID
	Name      string                 `json:"name"`      // 组件名称
	Logic     string                 `json:"logic"`     // 组件类型
	StartTime int64                  `json:"startTime"` // 开始时间戳
	Duration  int64                  `json:"duration"`  // 耗时(ms)
	Status    string                 `json:"status"`    // 组件运行状态 success/failed
	Error     string                 `json:"error"`     // 组件错误信息
	Input     map[string]interface{} `json:"input"`     // 输入参数
	Output    map[string]interface{} `json:"output"`    // 输出结果
}

type DatasourceAddRequest struct {
	Name   string `json:"name"`
	Type   string `json:"type"`
	Config string `json:"config"`
	Switch int    `json:"switch"`
}

type DatasourceAddResponse struct {
	Id int `json:"id"`
}

type DatasourceDeleteRequest struct {
	Id int `json:"id"`
}

type DatasourceDeleteResponse struct {
	Id int `json:"id"`
}

type DatasourceEditRequest struct {
	Id     int    `json:"id"`
	Name   string `json:"name"`
	Type   string `json:"type,optional"`
	Config string `json:"config,optional"`
	Switch int    `json:"switch,optional"`
}

type DatasourceEditResponse struct {
	Id int `json:"id"`
}

type DatasourceInfo struct {
	Id         int    `json:"id"`
	Name       string `json:"name"`
	Type       string `json:"type"`
	Config     string `json:"config"`
	Switch     int    `json:"switch"`
	Hash       string `json:"hash"`
	Status     string `json:"status"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type DatasourceListRequest struct {
	Current  int    `json:"current"`
	PageSize int    `json:"pageSize"`
	Type     string `json:"type,optional"`
	Name     string `json:"name,optional"`
	Status   string `json:"status,optional"`
	Switch   int    `json:"switch,optional"`
}

type DatasourceListResponse struct {
	Current  int              `json:"current"`
	PageSize int              `json:"pageSize"`
	Total    int64            `json:"total"`
	List     []DatasourceInfo `json:"list"`
}

type DatasourceTestRequest struct {
	Type   string `json:"type,optional"`
	Config string `json:"config,optional"`
}

type DatasourceTestResponse struct {
	Status  string `json:"status"`
	Message string `json:"message"`
}

type UserLoginRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type UserLoginResponse struct {
	Token string `json:"token"`
}

type UserLogoutRequest struct {
}

type UserLogoutResponse struct {
	Token string `json:"token"`
}

type UserInfoRequest struct {
}

type UserInfoResponse struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

type UserRegisterRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type UserRegisterResponse struct {
	Token string `json:"token"`
}
