syntax = "v1"


type CanvasRunRequest {
    Id string `json:"id" desc:"空间ID"`
    MetaData map[string]string `json:"metaData" desc:"元数据"`
    Data map[string]interface{} `json:"data" desc:"数据"`
}

type CanvasRunResponse {
    Ts int64 `json:"ts"`
    Id string `json:"id"`
    MetaData map[string]string `json:"metadata"`
    Data map[string]interface{} `json:"data"`
}

type CanvasDraftRequest {
    Id string `json:"id"`
    Graph map[string]interface{} `json:"graph"`
    Features map[string]interface{} `json:"features"`
    EnvironmentVariables []interface{} `json:"environment_variables"`
    ConversationVariables []interface{} `json:"conversation_variables"`
    Hash string `json:"hash,optional"`
}

type CanvasDraftResponse {
    Hash string `json:"hash"`
    UpdateTime int64 `json:"updateTime"`
}


type ModuleListRequest {

}

type ModuleListResponse {
    Total int `json:"total"`
    Modules []ModuleData `json:"modules"`
}

type ModuleData {
    Index int `json:"index"`
    ModuleId string `json:"moduleId"`
    ModuleName string `json:"moduleName"`
    ModuleType string `json:"moduleType"`
    ModuleConfig string `json:"moduleConfig"`
}

type EdgeCustomData struct {
    SourcePoint int `json:"sourcePoint"`
    TargetPoint int `json:"targetPoint"`
}

type CanvasDetailRequest {
    Id string `json:"id"`
}

type CanvasDetailResponse {
    Id string `json:"id"`
    Graph map[string]interface{} `json:"graph"`
    Features map[string]interface{} `json:"features"`
    EnvironmentVariables []interface{} `json:"environment_variables"`
    ConversationVariables []interface{} `json:"conversation_variables"`
    Hash string `json:"hash"`
}



@server(
    // 代表当前 service 代码块下的路由生成代码时都会被放到 login 目录下
    group: canvas
    // 定义路由前缀为 "/v1"
    prefix: /workflow
)

service workflow-api {
    @doc "运行"
    @handler CanvasRunHandler
    post /canvas/run (CanvasRunRequest) returns (CanvasRunResponse)

    @doc "画布更新"
    @handler CanvasDraftHandler
    post /canvas/draft (CanvasDraftRequest) returns (CanvasDraftResponse)

    @doc "组件list"
    @handler ModuleListHandler
    post /module/list (ModuleListRequest) returns (ModuleListResponse)

    @doc "画布链详情"
    @handler CanvasDetailHandler
    post /canvas/detail (CanvasDetailRequest) returns (CanvasDetailResponse)
}