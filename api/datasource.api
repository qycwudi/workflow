syntax = "v1"

type DatasourceListRequest {
	Current  int    `json:"current"`
	PageSize int    `json:"pageSize"`
	Type     string `json:"type,optional"`
	Status   string `json:"status,optional"`
	Switch   int    `json:"switch,optional"`
}

type DatasourceListResponse {
	Current  int              `json:"current"`
	PageSize int              `json:"pageSize"`
	Total    int64            `json:"total"`
	List     []DatasourceInfo `json:"list"`
}

type DatasourceInfo {
	Id         int    `json:"id"`
	Type       string `json:"type"`
	Config     string `json:"config"`
	Switch     int    `json:"switch"`
	Hash       string `json:"hash"`
	Status     string `json:"status"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type DatasourceAddRequest {
	Type   string `json:"type"`
	Config string `json:"config"`
	Switch int    `json:"switch"`
	Hash   string `json:"hash,optional"`
	Status string `json:"status,optional"`
}

type DatasourceAddResponse {
	Id int `json:"id"`
}

type DatasourceEditRequest {
	Id     int    `json:"id"`
	Type   string `json:"type,optional"`
	Config string `json:"config,optional"`
	Switch int    `json:"switch,optional"`
	Hash   string `json:"hash,optional"`
	Status string `json:"status,optional"`
}

type DatasourceEditResponse {
	Id int `json:"id"`
}

type DatasourceDeleteRequest {
	Id int `json:"id"`
}

type DatasourceDeleteResponse {
	Id int `json:"id"`
}

type DatasourceTestRequest {
	Type   string `json:"type,optional"`
	Config string `json:"config,optional"`
	Switch int    `json:"switch,optional"`
}

type DatasourceTestResponse {
	Status string `json:"status"`
	Message string `json:"message"`
}

@server (
	// 代表当前 service 代码块下的路由生成代码时都会被放到 login 目录下
	group: datasource
	// 定义路由前缀为 "/v1"
	prefix: /workflow
)

service workflow-api {

	@doc "数据源列表"
	@handler DatasourceListHandler
	post /datasource/list (DatasourceListRequest) returns (DatasourceListResponse)

	@doc "新增数据源"
	@handler DatasourceAddHandler
	post /datasource/add (DatasourceAddRequest) returns (DatasourceAddResponse)

	@doc "编辑数据源"
	@handler DatasourceEditHandler
	post /datasource/edit (DatasourceEditRequest) returns (DatasourceEditResponse)

	@doc "删除数据源"
	@handler DatasourceDeleteHandler
	post /datasource/delete (DatasourceDeleteRequest) returns (DatasourceDeleteResponse)

	@doc "测试数据源"
	@handler DatasourceTestHandler
	post /datasource/test (DatasourceTestRequest) returns (DatasourceTestResponse)

}